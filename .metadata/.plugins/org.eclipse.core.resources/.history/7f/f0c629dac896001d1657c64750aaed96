// 예외사항 import
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;

//생성자
public class MultiServer {
	private ArrayList<MultiServerThread> list;
	private Socket socket;
	private ServerSocket serverSocket;
	
	// 생성자
	public MultiServer()throws IOException {
		// 스레드 리스트
		list = new ArrayList<MultiServerThread>();	
		// 5000번 포트 서버 소켓 생성
		serverSocket = new ServerSocket(5000);
		// isStop 기본을 false로 선언
		boolean isStop = false;
		
		// 프로그램이 멈추지 않는다면
		while(!isStop) {
			// 콘솔창에 Server ready... 출력
			System.out.println("Server ready...");
			// 소켓 서버를 socket에 선언
			socket = serverSocket.accept();
			
			MultiServerThread mst  =  new MultiServerThread(socket);
			mst = new MultiServerThread(this);
			list.add(mst);	

			Thread t = new Thread(mst); 
			t.start();
		}
	} 

	// 메서드	
	/** 소켓 연결 끊는 메서드 **/
	void disconnect(MultiServerThread thread) {
		thread.kick();
	}
	
	public ArrayList<MultiServerThread>getList() {
		return list;
	}

	public Socket getSocket()
	{
		return socket;
	}

	// 메인
	public static void main(String arg[])throws IOException{
		new MultiServer();
	}
}
