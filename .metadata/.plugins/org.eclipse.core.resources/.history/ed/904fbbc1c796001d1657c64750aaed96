// 생성자
public class MultiClientThread extends Thread{
	private MultiServer ms;
	private MultiClient mc;
	private MultiServerThread mst;
	
	// MultiClient의 메서드 선언
	public MultiClientThread(MultiClient mc){
		// MultiClient의 메서드는 앞에 mc.으로 선언
		this.mc = mc;
	}
	
	public void run(){
		// message, receivedMsg를 null로 선언
		String message = null;
		String[] receivedMsg = null;
		// isStop 기본을 false로 선언
		boolean isStop = false;
		
		// 프로그램이 멈추지 않는다면
		while(!isStop){
			// MultClient에서 문자열을 만든다.
			try{
				// MultClient에서 받은 값을(getOis()) message로 선언
				message = (String)mc.getOis().readObject();
				// #을 기준으로 문자열을 나눠서 receivedMsg로 선언
				receivedMsg = message.split("#");
			}
			// 예외사항이 발생한다면
			catch(Exception e){
				// 예외사항을 출력 try catch의 기본문
				e.printStackTrace();
				// 프로그램을 멈춘다.
				isStop = true;
			}
			
			// MultiClient에서 첫번째 문자열이 exit라면
			if(receivedMsg[1].equals("exit")){
				// exit명령한 사용자가 종료되야하기 때문에
				// MultiClient에서 받은 0번째 문자열과 MultiCient의 getNickname과 같다면
				if(receivedMsg[0].equals(mc.getNickname())){
					// 프로그램을 종료한다.
					mc.exit();
				}
				// exit명령하지 않은 사용자는 채팅창에 상대방이 종료했다는 메시지 출력
				else{
					// 채팅창에 exit명령한 사용자의 닉네임 + 님이 종료.. 를 출력
					mc.getJta().append(
							receivedMsg[0] +"님이 종료 하셨습니다."+
									System.getProperty("line.separator"));
					// 
					mc.getJta().setCaretPosition(
							mc.getJta().getDocument().getLength());
				}
			}
			// 채팅창 비우기 키워드
			// MultiClient에서 받은 1번째 문자열이 /clear라면
			else if(receivedMsg[1].equals("/clear")) {
				// 채팅창을 공백으로 만듬
				mc.getJta().setText("  ");
			}
			// 공지사항 키워드
			// MultiClient에서 받은 1번째 문자열이 notice라면
			else if(receivedMsg[1].equals("notice")) {
				// MultiClient에서 받은 1번째 문자열을 공지사항 부분에 추가한다.
            	mc.setNotice(receivedMsg[2]);
            }
			// 강퇴 키워드
			// MultiClient에서 받은 1번째 문자열이 kick라면
			else if (receivedMsg[1].equals("kick")) {
				// MultiClient의 exit()로 보내서 프로그램을 종료한다.
            	mc.exit();
            }
			// 위의 모든 키워드가 아니라면 채팅창에 메시지 전송 키워드 실행
			else{
				// 채팅창에 닉네임 : 메시지를 출력함
				mc.getJta().append(
						receivedMsg[0] +" : "+receivedMsg[1]+
						System.getProperty("line.separator"));
				// 
				mc.getJta().setCaretPosition(
						mc.getJta().getDocument().getLength());
			}			
		}
	}
}